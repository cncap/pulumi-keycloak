// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RealmInternationalization {
    /**
     * @return The locale to use by default. This locale code must be present within the `supported_locales` list.
     * 
     */
    private final String defaultLocale;
    /**
     * @return A list of [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) locale codes that the realm should support.
     * 
     */
    private final List<String> supportedLocales;

    @CustomType.Constructor
    private RealmInternationalization(
        @CustomType.Parameter("defaultLocale") String defaultLocale,
        @CustomType.Parameter("supportedLocales") List<String> supportedLocales) {
        this.defaultLocale = defaultLocale;
        this.supportedLocales = supportedLocales;
    }

    /**
     * @return The locale to use by default. This locale code must be present within the `supported_locales` list.
     * 
     */
    public String defaultLocale() {
        return this.defaultLocale;
    }
    /**
     * @return A list of [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) locale codes that the realm should support.
     * 
     */
    public List<String> supportedLocales() {
        return this.supportedLocales;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RealmInternationalization defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String defaultLocale;
        private List<String> supportedLocales;

        public Builder() {
    	      // Empty
        }

        public Builder(RealmInternationalization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultLocale = defaults.defaultLocale;
    	      this.supportedLocales = defaults.supportedLocales;
        }

        public Builder defaultLocale(String defaultLocale) {
            this.defaultLocale = Objects.requireNonNull(defaultLocale);
            return this;
        }
        public Builder supportedLocales(List<String> supportedLocales) {
            this.supportedLocales = Objects.requireNonNull(supportedLocales);
            return this;
        }
        public Builder supportedLocales(String... supportedLocales) {
            return supportedLocales(List.of(supportedLocales));
        }        public RealmInternationalization build() {
            return new RealmInternationalization(defaultLocale, supportedLocales);
        }
    }
}
