// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetRealmOtpPolicy extends com.pulumi.resources.InvokeArgs {

    public static final GetRealmOtpPolicy Empty = new GetRealmOtpPolicy();

    @Import(name="algorithm", required=true)
    private String algorithm;

    public String algorithm() {
        return this.algorithm;
    }

    @Import(name="digits", required=true)
    private Integer digits;

    public Integer digits() {
        return this.digits;
    }

    @Import(name="initialCounter", required=true)
    private Integer initialCounter;

    public Integer initialCounter() {
        return this.initialCounter;
    }

    @Import(name="lookAheadWindow", required=true)
    private Integer lookAheadWindow;

    public Integer lookAheadWindow() {
        return this.lookAheadWindow;
    }

    @Import(name="period", required=true)
    private Integer period;

    public Integer period() {
        return this.period;
    }

    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private GetRealmOtpPolicy() {}

    private GetRealmOtpPolicy(GetRealmOtpPolicy $) {
        this.algorithm = $.algorithm;
        this.digits = $.digits;
        this.initialCounter = $.initialCounter;
        this.lookAheadWindow = $.lookAheadWindow;
        this.period = $.period;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRealmOtpPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRealmOtpPolicy $;

        public Builder() {
            $ = new GetRealmOtpPolicy();
        }

        public Builder(GetRealmOtpPolicy defaults) {
            $ = new GetRealmOtpPolicy(Objects.requireNonNull(defaults));
        }

        public Builder algorithm(String algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        public Builder digits(Integer digits) {
            $.digits = digits;
            return this;
        }

        public Builder initialCounter(Integer initialCounter) {
            $.initialCounter = initialCounter;
            return this;
        }

        public Builder lookAheadWindow(Integer lookAheadWindow) {
            $.lookAheadWindow = lookAheadWindow;
            return this;
        }

        public Builder period(Integer period) {
            $.period = period;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetRealmOtpPolicy build() {
            $.algorithm = Objects.requireNonNull($.algorithm, "expected parameter 'algorithm' to be non-null");
            $.digits = Objects.requireNonNull($.digits, "expected parameter 'digits' to be non-null");
            $.initialCounter = Objects.requireNonNull($.initialCounter, "expected parameter 'initialCounter' to be non-null");
            $.lookAheadWindow = Objects.requireNonNull($.lookAheadWindow, "expected parameter 'lookAheadWindow' to be non-null");
            $.period = Objects.requireNonNull($.period, "expected parameter 'period' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
