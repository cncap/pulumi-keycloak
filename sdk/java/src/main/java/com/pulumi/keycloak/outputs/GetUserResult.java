// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetUserResult {
    /**
     * @return (Computed) A map representing attributes for the user
     * 
     */
    private final Map<String,Object> attributes;
    /**
     * @return (Computed) The user&#39;s email.
     * 
     */
    private final String email;
    /**
     * @return (Computed) Whether the email address was validated or not. Default to `false`.
     * 
     */
    private final Boolean emailVerified;
    /**
     * @return (Computed) When false, this user cannot log in. Defaults to `true`.
     * 
     */
    private final Boolean enabled;
    /**
     * @return (Computed) The user&#39;s federated identities, if applicable. This block has the following schema:
     * 
     */
    private final List<String> federatedIdentities;
    /**
     * @return (Computed) The user&#39;s first name.
     * 
     */
    private final String firstName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return (Computed) The user&#39;s last name.
     * 
     */
    private final String lastName;
    private final String realmId;
    private final String username;

    @CustomType.Constructor
    private GetUserResult(
        @CustomType.Parameter("attributes") Map<String,Object> attributes,
        @CustomType.Parameter("email") String email,
        @CustomType.Parameter("emailVerified") Boolean emailVerified,
        @CustomType.Parameter("enabled") Boolean enabled,
        @CustomType.Parameter("federatedIdentities") List<String> federatedIdentities,
        @CustomType.Parameter("firstName") String firstName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lastName") String lastName,
        @CustomType.Parameter("realmId") String realmId,
        @CustomType.Parameter("username") String username) {
        this.attributes = attributes;
        this.email = email;
        this.emailVerified = emailVerified;
        this.enabled = enabled;
        this.federatedIdentities = federatedIdentities;
        this.firstName = firstName;
        this.id = id;
        this.lastName = lastName;
        this.realmId = realmId;
        this.username = username;
    }

    /**
     * @return (Computed) A map representing attributes for the user
     * 
     */
    public Map<String,Object> attributes() {
        return this.attributes;
    }
    /**
     * @return (Computed) The user&#39;s email.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return (Computed) Whether the email address was validated or not. Default to `false`.
     * 
     */
    public Boolean emailVerified() {
        return this.emailVerified;
    }
    /**
     * @return (Computed) When false, this user cannot log in. Defaults to `true`.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return (Computed) The user&#39;s federated identities, if applicable. This block has the following schema:
     * 
     */
    public List<String> federatedIdentities() {
        return this.federatedIdentities;
    }
    /**
     * @return (Computed) The user&#39;s first name.
     * 
     */
    public String firstName() {
        return this.firstName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Computed) The user&#39;s last name.
     * 
     */
    public String lastName() {
        return this.lastName;
    }
    public String realmId() {
        return this.realmId;
    }
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,Object> attributes;
        private String email;
        private Boolean emailVerified;
        private Boolean enabled;
        private List<String> federatedIdentities;
        private String firstName;
        private String id;
        private String lastName;
        private String realmId;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.email = defaults.email;
    	      this.emailVerified = defaults.emailVerified;
    	      this.enabled = defaults.enabled;
    	      this.federatedIdentities = defaults.federatedIdentities;
    	      this.firstName = defaults.firstName;
    	      this.id = defaults.id;
    	      this.lastName = defaults.lastName;
    	      this.realmId = defaults.realmId;
    	      this.username = defaults.username;
        }

        public Builder attributes(Map<String,Object> attributes) {
            this.attributes = Objects.requireNonNull(attributes);
            return this;
        }
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        public Builder emailVerified(Boolean emailVerified) {
            this.emailVerified = Objects.requireNonNull(emailVerified);
            return this;
        }
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        public Builder federatedIdentities(List<String> federatedIdentities) {
            this.federatedIdentities = Objects.requireNonNull(federatedIdentities);
            return this;
        }
        public Builder federatedIdentities(String... federatedIdentities) {
            return federatedIdentities(List.of(federatedIdentities));
        }
        public Builder firstName(String firstName) {
            this.firstName = Objects.requireNonNull(firstName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lastName(String lastName) {
            this.lastName = Objects.requireNonNull(lastName);
            return this;
        }
        public Builder realmId(String realmId) {
            this.realmId = Objects.requireNonNull(realmId);
            return this;
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }        public GetUserResult build() {
            return new GetUserResult(attributes, email, emailVerified, enabled, federatedIdentities, firstName, id, lastName, realmId, username);
        }
    }
}
