// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HardcodedRoleIdentityMapperState extends com.pulumi.resources.ResourceArgs {

    public static final HardcodedRoleIdentityMapperState Empty = new HardcodedRoleIdentityMapperState();

    @Import(name="extraConfig")
    private @Nullable Output<Map<String,Object>> extraConfig;

    public Optional<Output<Map<String,Object>>> extraConfig() {
        return Optional.ofNullable(this.extraConfig);
    }

    /**
     * IDP Alias
     * 
     */
    @Import(name="identityProviderAlias")
    private @Nullable Output<String> identityProviderAlias;

    /**
     * @return IDP Alias
     * 
     */
    public Optional<Output<String>> identityProviderAlias() {
        return Optional.ofNullable(this.identityProviderAlias);
    }

    /**
     * IDP Mapper Name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return IDP Mapper Name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Realm Name
     * 
     */
    @Import(name="realm")
    private @Nullable Output<String> realm;

    /**
     * @return Realm Name
     * 
     */
    public Optional<Output<String>> realm() {
        return Optional.ofNullable(this.realm);
    }

    /**
     * Role Name
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return Role Name
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    private HardcodedRoleIdentityMapperState() {}

    private HardcodedRoleIdentityMapperState(HardcodedRoleIdentityMapperState $) {
        this.extraConfig = $.extraConfig;
        this.identityProviderAlias = $.identityProviderAlias;
        this.name = $.name;
        this.realm = $.realm;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HardcodedRoleIdentityMapperState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HardcodedRoleIdentityMapperState $;

        public Builder() {
            $ = new HardcodedRoleIdentityMapperState();
        }

        public Builder(HardcodedRoleIdentityMapperState defaults) {
            $ = new HardcodedRoleIdentityMapperState(Objects.requireNonNull(defaults));
        }

        public Builder extraConfig(@Nullable Output<Map<String,Object>> extraConfig) {
            $.extraConfig = extraConfig;
            return this;
        }

        public Builder extraConfig(Map<String,Object> extraConfig) {
            return extraConfig(Output.of(extraConfig));
        }

        /**
         * @param identityProviderAlias IDP Alias
         * 
         * @return builder
         * 
         */
        public Builder identityProviderAlias(@Nullable Output<String> identityProviderAlias) {
            $.identityProviderAlias = identityProviderAlias;
            return this;
        }

        /**
         * @param identityProviderAlias IDP Alias
         * 
         * @return builder
         * 
         */
        public Builder identityProviderAlias(String identityProviderAlias) {
            return identityProviderAlias(Output.of(identityProviderAlias));
        }

        /**
         * @param name IDP Mapper Name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name IDP Mapper Name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param realm Realm Name
         * 
         * @return builder
         * 
         */
        public Builder realm(@Nullable Output<String> realm) {
            $.realm = realm;
            return this;
        }

        /**
         * @param realm Realm Name
         * 
         * @return builder
         * 
         */
        public Builder realm(String realm) {
            return realm(Output.of(realm));
        }

        /**
         * @param role Role Name
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role Role Name
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        public HardcodedRoleIdentityMapperState build() {
            return $;
        }
    }

}
