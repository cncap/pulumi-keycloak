// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class UserFederatedIdentity {
    /**
     * @return The name of the identity provider
     * 
     */
    private final String identityProvider;
    /**
     * @return The ID of the user defined in the identity provider
     * 
     */
    private final String userId;
    /**
     * @return The user name of the user defined in the identity provider
     * 
     */
    private final String userName;

    @CustomType.Constructor
    private UserFederatedIdentity(
        @CustomType.Parameter("identityProvider") String identityProvider,
        @CustomType.Parameter("userId") String userId,
        @CustomType.Parameter("userName") String userName) {
        this.identityProvider = identityProvider;
        this.userId = userId;
        this.userName = userName;
    }

    /**
     * @return The name of the identity provider
     * 
     */
    public String identityProvider() {
        return this.identityProvider;
    }
    /**
     * @return The ID of the user defined in the identity provider
     * 
     */
    public String userId() {
        return this.userId;
    }
    /**
     * @return The user name of the user defined in the identity provider
     * 
     */
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserFederatedIdentity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String identityProvider;
        private String userId;
        private String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(UserFederatedIdentity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identityProvider = defaults.identityProvider;
    	      this.userId = defaults.userId;
    	      this.userName = defaults.userName;
        }

        public Builder identityProvider(String identityProvider) {
            this.identityProvider = Objects.requireNonNull(identityProvider);
            return this;
        }
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }        public UserFederatedIdentity build() {
            return new UserFederatedIdentity(identityProvider, userId, userName);
        }
    }
}
